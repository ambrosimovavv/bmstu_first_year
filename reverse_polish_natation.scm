;обратная польская нотация
(define (rpn expr-lst)
  (define (polsk xs proc-lst res)
    (cond ((null? xs) (if (null? proc-lst)
                          (reverse res)
                          (polsk xs (cdr proc-lst) (cons (car proc-lst) res))))
          ((eq? (car xs) '<) (polsk (cdr xs) (cons (car xs) proc-lst) res))
          ((eq? (car xs) '>) (if (eq? (car proc-lst) '<)
                                 (polsk (cdr xs) (cdr proc-lst) res)
                                 (polsk xs (cdr proc-lst) (cons (car proc-lst) res))))
          ((or (eq? (car xs) '+) (eq? (car xs) '-)) (if (or (null? proc-lst) (eq? (car proc-lst) '<))
                                                        (polsk (cdr xs) (cons (car xs) proc-lst) res)
                                                        (polsk xs (cdr proc-lst) (cons (car proc-lst) res))))
          ((or (eq? (car xs) '*) (eq? (car xs) '/)) (polsk (cdr xs) (cons (car xs) proc-lst) res))
          (else (polsk (cdr xs) proc-lst (cons (car xs) res)))))
  (polsk expr-lst '() '()))